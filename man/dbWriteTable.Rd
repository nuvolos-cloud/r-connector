% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sql_methods.R
\name{dbWriteTable}
\alias{dbWriteTable}
\title{Write tables to Nuvolos.cloud}
\usage{
dbWriteTable(
  dbname,
  name,
  con,
  database = NULL,
  schema = NULL,
  if_exists = "fail",
  index = TRUE,
  index_label = NULL,
  nanoseconds = FALSE
)
}
\arguments{
\item{dbname}{Name of the R dataframe to be written to a table.}

\item{name}{The name of the database table. It will only be quoted and case sensitive if it contains keywords or special chars}

\item{con}{pyodbc connection object when using on Nuvolos and an sqlalchemy connection object when using from a local device. The object can be created by get_connection function.}

\item{database}{The name of the database to which data will be inserted.}

\item{schema}{The name of the schema to which data will be inserted.}

\item{index}{bool, default True: Write DataFrame index as a column. Uses index_label as the column name in the table.}

\item{index_label}{column label for index column(s). If None is given (default) and index is True, then the index names are used. A sequence should be given if the DataFrame uses MultiIndex.}

\item{nanoseconds}{if True, nanosecond timestamps will be used to upload the data. Limits timestamp range from 1677-09-21 00:12:43.145224192 to 2262-04-11 23:47:16.854775807.}

\item{if_exists:}{How to behave if the table already exists. {‘fail’, ‘replace’, ‘append’}, default ‘fail’
* fail: Raise a ValueError.
* replace: Drop the table before inserting new values.
* append: Insert new values to the existing table.}
}
\value{
Returns the COPY INTO command's results to verify ingestion in the form of a tuple of whether all chunks were ingested correctly, # of chunks, # of ingested rows, and ingest's output.
}
\description{
Function dbWriteTable(dbname, name, con, database, schema, if_exists, index, index_label, nanoseconds).
Creates table in the connected nuvolos schema from R dataframe.
}
\examples{
df <- nuvolos::dbWriteQuery(dbname = db, name = "table", con = con, if_exists = 'replace', index = FALSE)

}
